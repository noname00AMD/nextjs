datasource db {
  provider = "mysql"
  url      = "mysql://root:admin@localhost:3306/news"
}

generator client {
  provider = "prisma-client-js"
}

model category {
  id          BigInt  @id @default(autoincrement()) @db.UnsignedBigInt()
  cate_name   String  @db.VarChar(200)
  slug        String  @unique @db.VarChar(200)
  visible     Boolean
  size        Int
  parent      BigInt  @db.UnsignedBigInt()
  type        String  @db.VarChar(30)
  discription String  @db.VarChar(200)

  @@index([slug, parent])
}

model comments {
  id                 BigInt   @id @default(autoincrement()) @db.UnsignedBigInt()
  comment_post_id    BigInt   @db.UnsignedBigInt()
  comment_author     String   @unique @db.VarChar(200)
  comment_author_id  BigInt   @db.UnsignedBigInt()
  comment_author_url String   @unique @db.VarChar(200)
  comment_author_ip  String   @unique @db.VarChar(100)
  comment_date       DateTime @default(now()) @db.DateTime()
  comment_date_gmt   DateTime @default(now()) @db.DateTime()
  comment_content    String   @db.Text()
  comment_approved   String   @db.VarChar(20)
  comment_type       String   @default("comment") @db.VarChar(20)
  comment_parent     BigInt   @db.UnsignedBigInt()

  @@index([comment_post_id, comment_approved, comment_parent])
}

model posts {
  id                     BigInt   @id @default(autoincrement()) @db.UnsignedBigInt()
  post_author_id         BigInt   @db.UnsignedBigInt()
  post_author_ip         String   @db.VarChar(100)
  post_date              DateTime @default(now()) @db.DateTime()
  post_date_modified     DateTime @default(now()) @db.DateTime()
  post_date_gmt          DateTime @default(now()) @db.DateTime()
  post_date_modified_gmt DateTime @default(now()) @db.DateTime()
  post_title             String   @db.Text()
  post_slug              String   @db.VarChar(300)
  post_content           String   @db.Text()
  post_status            String   @db.VarChar(20)
  post_comment_status    String   @db.VarChar(20)
  post_mime_type         String   @db.VarChar(20)
  post_type              String   @default("comment") @db.VarChar(20)
  comment_count          Int      @default(0) @db.Int()
  post_category          BigInt   @db.UnsignedBigInt()
  post_excerpt           String   @db.Text()
  post_password          String   @db.VarChar(255)

  @@index([post_author_id, post_date, post_mime_type])
}

model histories {
  id                BigInt   @id @default(autoincrement()) @db.UnsignedBigInt()
  user_id           BigInt   @db.UnsignedBigInt()
  comment_author_ip String   @unique @db.VarChar(100)
  comment_date      DateTime @default(now()) @db.DateTime()
  comment_date_gmt  DateTime @default(now()) @db.DateTime()
  value             Json     @db.Json
  from_table        String   @db.VarChar(30)
  action            String   @db.VarChar(20)

  @@index([user_id])
}

model siteinfo {
  id    Int    @id @default(autoincrement()) @db.Int()
  key   String @db.VarChar(30)
  value String @db.Text

  @@index([key])
}

model users {
  id                  BigInt   @id @default(autoincrement()) @db.UnsignedBigInt()
  ip                  String   @db.VarChar(100)
  sign_up_at          DateTime @default(now()) @db.DateTime()
  display_name        String   @db.Text()
  username            String   @db.VarChar(100)
  password            String   @db.VarChar(255)
  user_status         String   @db.VarChar(20)
  user_comment_status String   @db.VarChar(20)
  role                String   @default("user") @db.VarChar(20)
  comment_count       Int      @default(0) @db.Int()
  active_key          String   @db.VarChar(255)
  user_email          String   @db.VarChar(100)
  user_url            String   @db.VarChar(100)

  @@index([user_email, username])
}

model tag {
  id       BigInt @id @default(autoincrement()) @db.UnsignedBigInt()
  tag_name String @db.VarChar(50)
  slug     String @db.VarChar(50)
  size     Int    @default(0) @db.Int()

  @@index([slug])
}

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   role    Role     @default(USER)
//   posts   Post[]
//   profile Profile?
// }

// model Profile {
//   id     Int    @id @default(autoincrement())
//   bio    String
//   user   User   @relation(fields: [userId], references: [id])
//   userId Int    @unique
// }

// model Post {
//   id         Int        @id @default(autoincrement())
//   createdAt  DateTime   @default(now())
//   title      String
//   published  Boolean    @default(false)
//   author     User       @relation(fields: [authorId], references: [id])
//   authorId   Int
//   categories Category[]
// }

// model Category {
//   id    Int    @id @default(autoincrement())
//   name  String
//   posts Post[]
// }

// enum Role {
//   USER
//   ADMIN
// }
